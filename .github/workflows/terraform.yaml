name: Build, Push to ECR, and Deploy via Terraform

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checar o código do repositório
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configurar AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Autenticar no ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      # Step 4: Construir a imagem Docker
      - name: Build Docker image
        run: |
          docker build -t tech-challenge-api -f ./TechChallenge/API/Dockerfile ./TechChallenge

      # Step 5: Marcar e empurrar a imagem para o ECR
      - name: Tag and Push Docker image to ECR
        run: |
          IMAGE_TAG=latest
          docker tag tech-challenge-api:latest ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          docker push ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

  deploy:
    name: Deploy via Terraform
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Checar o código do repositório
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configurar AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Instalar o Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      # Step 4: Mudar para o diretório 'terraform'
      - name: Change directory to terraform
        run: cd terraform

      # Step 5: Inicializar o Terraform
      - name: Terraform Init
        run: terraform init

      # Step 6: Aplicar o Terraform para rodar a aplicação
      - name: Terraform Apply
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_ecr_repository_name: ${{ secrets.ECR_REPOSITORY }}:latest
        run: terraform apply -auto-approve
